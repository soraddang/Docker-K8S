1. Ubuntu 환경 설정 
   
  1) 소프트웨어 업데이트 비활성화 
 
  2) Ubuntu 저장소 설정
      cd /etc/apt
      mv sources.list sources.list.bak
      nano sources.list
      deb http://ftp.daumkakao.com/ubuntu/ focal main
      deb http://archive.ubuntu.com/ubuntu/ focal main

      deb http://ftp.daumkakao.com/ubuntu/ focal universe
      deb http://archive.ubuntu.com/ubuntu/ focal universe

      deb http://ftp.daumkakao.com/ubuntu/ focal multiverse
      deb http://archive.ubuntu.com/ubuntu/ focal multiverse

      deb http://ftp.daumkakao.com/ubuntu/ focal restricted
      deb http://archive.ubuntu.com/ubuntu/ focal restricted
            
   4) Package Update
      apt update
     
2. [All Node] Docker Engine 설치 

   [참조사이트] https://docs.docker.com

 1) Docker에 필요한 툴 설치
  apt-get update
  apt-get install -y ca-certificates curl software-properties-common apt-transport-https gnupg lsb-release
  
 2) 도커 GPG key와 저장소 지정   
  mkdir -p /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

3) 패키지 업데이트 
  apt update

4) Docker Engine 설치 
 curl -O http://archive.ubuntu.com/ubuntu/pool/main/libs/libseccomp/libseccomp2_2.5.1-1ubuntu1~20.04.2_amd64.deb
 dpkg -i libseccomp2_2.5.1-1ubuntu1~20.04.2_amd64.deb
 apt install docker-ce docker-ce-cli containerd.io -y

5)  도커 데몬 설정
    mkdir /etc/docker                                               #/etc/docker 디렉토리 없을 경우 생성
    cat <<EOF |  tee /etc/docker/daemon.json                         #daemon.json 파일 추가
     {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
             "max-size": "100m"
         },
        "storage-driver": "overlay2"
      }
    EOF

6) Docker 활성화 
  systemctl enable docker
  systemctl start docker
  docker version


3. K8S 설치 전 준비사항(All Node)

   [참조사이트] https://kubernetes.io/docs/home

1) Swap 비활성화
   swapoff -a && sed -i '/swap/s/^/#/' /etc/fstab
   
2)  Master와 Workernode 브릿지(스위치) 연결
   cat<<EOF | tee /etc/sysctl.d/k8s.conf
   net.bridge.bridge-nf-call-ip6tables = 1
   net.bridge.bridge-nf-call-iptables = 1
   EOF
   sysctl --system

4.[All nodes] Kubeadm, kubect, kubelet Install

1) K8S GPG key와 저장소 지정 
apt-get update
apt-get install -y apt-transport-https ca-certificates curl
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list

2) K8S 저장소의 패키지 업데이트와 K8S 설치  
apt-get update
apt-get install -y kubelet kubeadm kubectl
apt-mark hold kubelet kubeadm kubectl


4) K8S 서비스 활성화>>
systemctl daemon-reload
systemctl restart kubelet
systemctl enable kubelet


5. [Master]  Kubeadmn을 이용한 cluster 구성

 1)  마스터 노드 초기화
 
  nano /etc/containerd/config.toml
        disabled_plugins 항목에서 CRI 제거한 뒤
  systemctl restart containerd
  kubeadm init
  -----------------------------------------------   
     **kubeadmin join~~을 파일로 저장 
     nano /kube.txt
         kubeadmin join~~  
     
   ----------------------------------------
mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config
kubectl get nodes

2) CNI 구성
 kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s-1.11.yaml   
 kubectl get nodes
  
6. [Worker Node] Master node와 Worker node join (Cluster 구성) 
  mv /etc/containerd/config.toml /etc/containerd/config.toml.back
  cat <<EOF > /etc/containerd/config.toml
    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
    SystemdCgroup = true
    EOF
  systemctl restart containerd
    ----------------------------------------
* kubeadmin join 복사
  
7. [Master]클러스터 노드 확인  
  kubectl get nodes
